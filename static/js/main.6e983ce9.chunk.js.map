{"version":3,"sources":["CalcButton.js","Logic.js","App.js","index.js"],"names":["CalcButton","this","props","orange","wide","onClick","text","className","id","getButtonId","React","Component","calculate","buttonText","previous","operand","current","returnState","includes","operation","substring","String","Number","length","term1","term2","App","state","buttonData","onButtonClick","setState","console","log","map","b","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.6e983ce9.chunk.js","sourcesContent":["import React from \"react\";\n\nclass CalcButton extends React.Component {\n  getButtonId() {\n    if (this.props.orange) {\n      return \"orange-button\";\n    } else if (this.props.wide) {\n      return \"wide-button\";\n    } else {\n      return \"\";\n    }\n  }\n\n  render() {\n    return (\n      <div\n        onClick={() => this.props.onClick(this.props.text)}\n        className=\"calc-button\"\n        id={this.getButtonId()}\n      >\n        {this.props.text}\n      </div>\n    );\n  }\n}\nexport default CalcButton;\n","/* Calculator Functions\n\ncurrent: the current term displayed on the calculator\nprevious: the previous term saved on the calculator. Null if empty.\noperand: the previous operand saved on the calculator. Null if empty.\nbuttonText: the text of the button presssed\n\nIf operand is not empty and previous is empty, then we are temparily storing\n\n*/\nexport default function calculate({ previous, operand, current }, buttonText) {\n  // state to return\n  var returnState = {\n    previous: previous,\n    operand: operand,\n    current: current,\n  };\n\n  // clear button pressed\n  if (buttonText === \"AC\") {\n    returnState.previous = null;\n    returnState.operand = null;\n    returnState.current = \"0\";\n    return returnState;\n  }\n\n  // handle infinity case\n  if (current.includes(\"Infinity\")) {\n    return returnState;\n  }\n\n  // equal button pressed\n  if (buttonText === \"=\") {\n    if (operand && previous !== null) {\n      returnState.current = operation(operand, previous, current);\n      returnState.previous = null;\n      returnState.operand = null;\n    }\n    return returnState;\n  }\n\n  // reverse sign pressed\n  if (buttonText === \"+/-\") {\n    returnState.operand = null;\n    if (current[0] === \"-\") {\n      returnState.current = current.substring(1);\n    } else if (current !== \"0\") {\n      returnState.current = \"-\" + current;\n    }\n    return returnState;\n  }\n\n  // standard operand (+, -, X, /) pressed\n  if (\n    buttonText === \"+\" ||\n    buttonText === \"-\" ||\n    buttonText === \"X\" ||\n    buttonText === \"/\"\n  ) {\n    if (previous === null) {\n      returnState.operand = buttonText;\n    } else {\n      returnState.current = operation(operand, previous, current);\n      returnState.previous = null;\n      returnState.operand = buttonText;\n    }\n    return returnState;\n  }\n\n  // percentage pressed\n  if (buttonText === \"%\") {\n    if (operand && previous !== null) {\n      returnState.current = String(\n        Number(operation(operand, previous, current)) / 100\n      );\n      returnState.previous = null;\n      returnState.operand = null;\n    } else {\n      returnState.current = String(Number(current) / 100);\n      returnState.operand = null;\n    }\n    return returnState;\n  }\n\n  // decimal pressed\n  if (buttonText === \".\") {\n    if (!current.includes(\".\")) {\n      returnState.current = current + buttonText;\n    }\n    return returnState;\n  }\n\n  // digit pressed\n  if (current[0] === \"0\" && !(current.length > 1 && current[1] === \".\")) {\n    returnState.current = buttonText;\n    return returnState;\n  }\n  if (operand && previous === null) {\n    returnState.previous = current;\n    returnState.current = buttonText;\n    return returnState;\n  }\n  returnState.current = current + buttonText;\n  return returnState;\n}\n\n// do standard calculator operations\nfunction operation(operand, term1, term2) {\n  if (operand === \"+\") {\n    return String(Number(term1) + Number(term2));\n  } else if (operand === \"-\") {\n    return String(Number(term1) - Number(term2));\n  } else if (operand === \"/\") {\n    return String(Number(term1) / Number(term2));\n  } else if (operand === \"X\") {\n    return String(Number(term1) * Number(term2));\n  }\n  return \"0\";\n}\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport CalcButton from \"./CalcButton\";\nimport calculate from \"./Logic\";\n\nclass App extends Component {\n  state = { current: \"0\", previous: null, operand: null };\n\n  buttonData = [\n    { text: \"AC\" },\n    { text: \"+/-\" },\n    { text: \"%\" },\n    { text: \"/\", orange: true },\n    { text: \"7\" },\n    { text: \"8\" },\n    { text: \"9\" },\n    { text: \"X\", orange: true },\n    { text: \"4\" },\n    { text: \"5\" },\n    { text: \"6\" },\n    { text: \"-\", orange: true },\n    { text: \"1\" },\n    { text: \"2\" },\n    { text: \"3\" },\n    { text: \"+\", orange: true },\n    { text: \"0\", wide: true },\n    { text: \".\" },\n    { text: \"=\", orange: true },\n  ];\n\n  onButtonClick = (buttonText) => {\n    const { previous, current, operand } = calculate(this.state, buttonText);\n    this.setState({\n      previous: previous,\n      current: current,\n      operand: operand,\n    });\n    console.log(previous, current, operand);\n  };\n\n  render() {\n    return (\n      <div className=\"grid-container\">\n        <div id=\"answer-button\" className=\"calc-button\">\n          {this.state.current}\n        </div>\n        {this.buttonData.map((b) => {\n          return (\n            <CalcButton\n              key={b.text}\n              onClick={this.onButtonClick}\n              text={b.text}\n              wide={b.wide}\n              orange={b.orange}\n            ></CalcButton>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.querySelector(\"#root\"));\n"],"sourceRoot":""}